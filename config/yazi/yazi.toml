[mgr]
ratio          = [ 1, 3, 4 ]
sort_by        = "natural"
sort_sensitive = true
sort_reverse   = false
sort_dir_first = true
linemode       = "none"
show_hidden    = false
show_symlink   = true

[preview]
tab_size        = 3
max_width       = 1080
max_height      = 1920
cache_dir       = ""
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]

[opener]
edit = [
	{ run = '$EDITOR "$@"', block = true,  for = "unix" },
	{ run = 'code "%*"',    orphan = true, for = "windows" },
]
open = [
	{ run = 'xdg-open "$@"',             desc = "Open", for = "linux" },
	{ run = 'open "$@"',                 desc = "Open", for = "macos" },
	{ run = 'start "%1"', orphan = true, desc = "Open", for = "windows" }
]
reveal = [
	{ run = 'open -R "$1"',                       desc = "Reveal", for = "macos" },
	{ run = 'explorer /select,%1', orphan = true, desc = "Reveal", for = "windows" },
	{ run = '''exiftool "$1" | less''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
	{ run = 'unar "$1"', desc = "Extract here", for = "unix" },
	{ run = 'unar "%1"', desc = "Extract here", for = "windows" },
]
play = [
	{ run = 'mpv --loop-file --mute=yes "$@"', orphan = true, for = "unix" },
	{ run = 'smplayer -minigui "$@"', orphan = true, for = "unix" },
	{ run = 'mpv "%1"', orphan = true, for = "windows" },
	{ run = '''mediainfo "$1" | less''', block = true, desc = "Show media info", for = "unix" },
]
read = [
  { run = 'zathura "$@" --page=1', orphan = true, for = "unix"}
]

[open]
rules = [
	{ name = "*/", use = [ "edit", "open", "reveal" ] },

	{ mime = "text/*",  use = [ "edit", "reveal" ] },
	{ mime = "image/*", use = [ "open", "reveal" ] },
	{ mime = "video/*", use = [ "play", "reveal" ] },
	{ mime = "audio/*", use = [ "play", "reveal" ] },
	{ mime = "inode/x-empty", use = [ "edit", "reveal" ] },

	{ mime = "application/json", use = [ "edit", "reveal" ] },
	{ mime = "*/javascript",     use = [ "edit", "reveal" ] },


	{ mime = "application/pdf",     use = [ "read", "reveal" ] },

	{ mime = "application/zip",             use = [ "read", "extract", "reveal" ] },
	{ mime = "application/gzip",            use = [ "read", "extract", "reveal" ] },
	{ mime = "application/tar",           use = [ "read", "extract", "reveal" ] },
	{ mime = "application/bzip",          use = [ "read", "extract", "reveal" ] },
	{ mime = "application/bzip2",         use = [ "read", "extract", "reveal" ] },
	{ mime = "application/7z-compressed", use = [ "read", "extract", "reveal" ] },
	{ mime = "application/rar",           use = [ "read", "extract", "reveal" ] },
	{ mime = "application/xz",              use = [ "read", "extract", "reveal" ] },

	# { mime = "*", use = [ "open", "reveal" ] },
  # { name = "*.cbz", use = [ "read" ] },
  # { name = "*.cbr", use = [ "read" ] },
  # { name = "*.pdf", use = [ "read" ] },
]

[tasks]
micro_workers    = 10
macro_workers    = 25
bizarre_retry    = 5
image_alloc      = 536870912  # 512MB
image_bound      = [ 0, 0 ]
suppress_preload = false

[plugin]

preloaders = [
	# Image
	{ mime = "image/vnd.djvu", run = "noop" },
	{ mime = "image/*",        run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
]
previewers = [
	{ name = "*/", run = "folder", sync = true },
	# Code
	{ mime = "text/*",                 run = "code" },
	{ mime = "*/xml",                  run = "code" },
	{ mime = "*/javascript",           run = "code" },
	{ mime = "*/wine-extension-ini", run = "code" },
	# JSON
	{ mime = "application/json", run = "json" },
	# Image
	{ mime = "image/vnd.djvu", run = "noop" },
	{ mime = "image/*",        run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Archive
	{ mime = "application/zip",             run = "archive" },
	{ mime = "application/gzip",            run = "archive" },
	{ mime = "application/tar",           run = "archive" },
	{ mime = "application/bzip",          run = "archive" },
	{ mime = "application/bzip2",         run = "archive" },
	{ mime = "application/7z-compressed", run = "archive" },
	{ mime = "application/rar",           run = "archive" },
	{ mime = "application/xz",              run = "archive" },
]

[input]
# cd
cd_title  = "Change directory:"
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]

# create
create_title  = ["Create:", "Create"]
create_origin = "top-center"
create_offset = [ 0, 2, 50, 3 ]

# rename
rename_title  = "Rename:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]

# trash
trash_title 	= "Move {n} selected file{s} to trash? (y/N)"
trash_origin	= "top-center"
trash_offset	= [ 0, 2, 50, 3 ]

# delete
delete_title 	= "Delete {n} selected file{s} permanently? (y/N)"
delete_origin	= "top-center"
delete_offset	= [ 0, 2, 50, 3 ]

# filter
filter_title  = "Filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]

# find
find_title  = [ "Find next:", "Find previous:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]

# search
search_title  = "Search:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]

# shell
shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

# overwrite
overwrite_title  = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [ 0, 2, 50, 3 ]

# quit
quit_title  = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [ 0, 2, 50, 3 ]

[pick]
open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[log]
enabled = true
